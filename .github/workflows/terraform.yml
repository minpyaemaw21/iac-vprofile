name: "Vprofile IAC"
#when should the workflow get started
on:
    push:
        branches:
            - main
            - stage
        paths:
            - terraform/**
    pull_request:
        branches:
            - main
        paths:
            - terraform/**

env:
  #Credentials for deployment to AWS
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #S3 bucket for the terraform state
  BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE }}
  AWS_REGION: ap-southeast-1
  EKS_CLUSTER: vprofile-eks

jobs: #like build from jenkins
    terraform:
        name: "Apply terraform code changes"
        runs-on: ubuntu-latest #runners, but containers
        defaults: #what default thing to use when the job is running
            run:
                shell: bash
                working-directory: ./terraform #run bash shell from tha directory

        steps: #steps are like stages from jenkins, like tasks from ansible
            - name: Checkout source code
              uses: actions/checkout@v4 #pre-defined actions stored in the market place
            
            - name: Setup Terraform with specified version on the runner
              uses: hashicorp/setup-terraform@v3 #action version
              with:
                terraform_version: 1.6.3 #selecting the specific version of terrform, if not select the latest version will be installed

            - name: Terraform init
              id: init
              run: terraform init -backend-config="bucket=$BUCKET_TF_STATE"
            
            - name: Terraform format
              id: fmt
              run: terraform fmt -check #if the format is not correct, the workflow will fail
            
            - name: Terraform validate
              id: validate
              run: terraform validate #check the syntax of the terraform code
            
            - name: Terraform plan
              id: plan
              run: terraform plan -no-color -input=false -out planfile
              continue-on-error: true
            
            - name: Terraform plan status
              if: steps.plan.outcome == 'failure'
              run: exit 1 #will stop the workflow
            
            